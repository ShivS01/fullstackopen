{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/Data.js","services/Notification.js","App.js","index.js"],"names":["Filter","filterby","handleFilter","updateView","value","onChange","PersonForm","submitNew","inputValue","handleName","handleNumber","onSubmit","newName","newNumber","type","Persons","displayList","handleDelete","map","display","key","id","name","number","onClick","baseUrl","Axios","get","then","response","data","newObj","post","updatedObj","console","log","put","delete","Notification","message","status","className","App","useState","persons","setPersons","useEffect","service","fetchedData","setNewName","setNewNumber","search","setSearch","setMessage","setStatus","updatePerson","person","find","toLowerCase","toUpdate","alert","update","catch","error","toShow","filter","includes","setTimeout","event","target","preventDefault","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eed182f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filterby, handleFilter, updateView }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filterby} onChange={handleFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({ submitNew, inputValue, handleName, handleNumber }) => {\r\n  return (\r\n    <form onSubmit={submitNew}>\r\n      <div>\r\n        name:\r\n        <input value={inputValue.newName} onChange={handleName} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={inputValue.newNumber} onChange={handleNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ displayList, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      {displayList.map((display) => (\r\n        <div key={display.id}>\r\n          <span>\r\n            {display.name} {display.number}\r\n          </span>\r\n          <button onClick={() => handleDelete(display.id, display.name)}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import Axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => Axios.get(baseUrl).then((response) => response.data);\r\n\r\nconst create = (newObj) =>\r\n  Axios.post(baseUrl, newObj).then((response) => response.data);\r\n\r\nconst update = (id, updatedObj) => {\r\n  console.log(id);\r\n  console.log(updatedObj);\r\n\r\n  return Axios.put(`${baseUrl}/${id}`, updatedObj).then((response) => {\r\n    console.log(response);\r\n  });\r\n};\r\n\r\nconst remove = (id) =>\r\n  Axios.delete(`${baseUrl}/${id}`).then((response) => {\r\n    console.log(response);\r\n    return response.data;\r\n  });\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, status }) => {\r\n  if (message === null) return null;\r\n  return <div className={status}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport service from \"./services/Data\";\r\nimport Notification from \"./services/Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    service.getAll().then((fetchedData) => {\r\n      setPersons(fetchedData);\r\n      // console.log(fetchedData);\r\n    });\r\n  }, []);\r\n  // console.log(persons);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const changeName = (event) => setNewName(event.target.value);\r\n\r\n  const changeNumber = (event) => setNewNumber(event.target.value);\r\n\r\n  const changeFilter = (event) => setSearch(event.target.value);\r\n\r\n  const addNew = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      persons.find(\r\n        (person) =>\r\n          person.name.toLowerCase() === newName.toLowerCase() &&\r\n          person.number === newNumber\r\n      )\r\n    ) {\r\n      return alert(`${newName} is already added to the phonebook`);\r\n    } else if (\r\n      persons.find(\r\n        (person) => person.name.toLowerCase() === newName.toLowerCase()\r\n      )\r\n    ) {\r\n      updatePerson();\r\n    } else {\r\n      const obj = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n\r\n      service.create(obj).then((update) => {\r\n        setPersons(persons.concat(update));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setMessage(`Added ${update.name}`);\r\n        setStatus(\"green\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const updatePerson = () => {\r\n    const person = persons.find(\r\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\r\n    );\r\n    const toUpdate = { ...person, number: newNumber };\r\n\r\n    alert(\r\n      `${toUpdate.name} is already added to phonebook, replace the old number with a new one?`\r\n    );\r\n    service\r\n      .update(toUpdate.id, toUpdate)\r\n      .then(() =>\r\n        service.getAll().then((update) => {\r\n          setPersons(update);\r\n          setMessage(\r\n            `${toUpdate.name} has been updated with new number ${toUpdate.number}`\r\n          );\r\n          setStatus(\"green\");\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        setMessage(\r\n          `Information of ${toUpdate.name} has already been removed from the server`\r\n        );\r\n        setStatus(\"red\");\r\n      });\r\n  };\r\n\r\n  const deletePerson = (id, name) => {\r\n    alert(`delete ${name}?`);\r\n    service.remove(id).then(() =>\r\n      service.getAll().then((update) => {\r\n        setPersons(update);\r\n        setMessage(`${name} has been deleted from the server`);\r\n        setStatus(\"red\");\r\n      })\r\n    );\r\n  };\r\n\r\n  const toShow = persons.filter((person) =>\r\n    person.name.toLowerCase().includes(search)\r\n  );\r\n\r\n  if (message !== null) {\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={message} status={status} />\r\n      <Filter filterby={search} handleFilter={changeFilter} />\r\n\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        submitNew={addNew}\r\n        inputValue={(newName, newNumber)}\r\n        handleNumber={changeNumber}\r\n        handleName={changeName}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons displayList={toShow} handleDelete={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}